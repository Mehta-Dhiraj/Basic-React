{"ast":null,"code":"var _jsxFileName = \"/Users/dmehta2/Desktop/React/Cart_System/Shoping Cart/src/store/CartProvider.js\",\n    _s = $RefreshSig$();\n\nimport CartContext from './cart-context';\nimport { useReducer } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst defaultcartState = {\n  items: [],\n  totalAmount: 0\n};\n\nconst cartReducer = (state, action) => {\n  if (action.type === 'ADD') {\n    const updatedItem = state.items.concat(action.item);\n    const updatedtotalAmount = state.totalAmount + action.item.price * action.item.amount;\n    return {\n      items: updatedItem,\n      totalAmount: updatedtotalAmount\n    };\n  }\n\n  return defaultcartState;\n};\n\nconst CartProvider = props => {\n  _s();\n\n  const [cartSatate, dispatchCartAction] = useReducer(cartReducer, defaultcartState);\n\n  const addItemHandler = item => {\n    dispatchCartAction({\n      type: 'ADD',\n      item: item\n    });\n  };\n\n  const removeItemHandler = id => {\n    dispatchCartAction({\n      type: 'REMOVE',\n      id: id\n    });\n  };\n\n  const cartContext = {\n    items: cartSatate.items,\n    totalAmount: cartSatate.totalAmount,\n    addItem: addItemHandler,\n    removeItem: removeItemHandler\n  };\n  return /*#__PURE__*/_jsxDEV(CartContext.Provider, {\n    value: cartContext,\n    children: props.children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 45,\n    columnNumber: 7\n  }, this);\n};\n\n_s(CartProvider, \"8n43ZJ0YlHtkiHsXM4wn3WBmfZc=\");\n\n_c = CartProvider;\nexport default CartProvider;\n\nvar _c;\n\n$RefreshReg$(_c, \"CartProvider\");","map":{"version":3,"sources":["/Users/dmehta2/Desktop/React/Cart_System/Shoping Cart/src/store/CartProvider.js"],"names":["CartContext","useReducer","defaultcartState","items","totalAmount","cartReducer","state","action","type","updatedItem","concat","item","updatedtotalAmount","price","amount","CartProvider","props","cartSatate","dispatchCartAction","addItemHandler","removeItemHandler","id","cartContext","addItem","removeItem","children"],"mappings":";;;AAAA,OAAOA,WAAP,MAAwB,gBAAxB;AACA,SAASC,UAAT,QAA2B,OAA3B;;AAEA,MAAMC,gBAAgB,GAAG;AACrBC,EAAAA,KAAK,EAAE,EADc;AAErBC,EAAAA,WAAW,EAAE;AAFQ,CAAzB;;AAKA,MAAMC,WAAW,GAAG,CAACC,KAAD,EAAQC,MAAR,KAAmB;AACnC,MAAGA,MAAM,CAACC,IAAP,KAAgB,KAAnB,EAAyB;AACrB,UAAMC,WAAW,GAAGH,KAAK,CAACH,KAAN,CAAYO,MAAZ,CAAmBH,MAAM,CAACI,IAA1B,CAApB;AACA,UAAMC,kBAAkB,GAAGN,KAAK,CAACF,WAAN,GAAoBG,MAAM,CAACI,IAAP,CAAYE,KAAZ,GAAoBN,MAAM,CAACI,IAAP,CAAYG,MAA/E;AACA,WAAO;AACLX,MAAAA,KAAK,EAAEM,WADF;AAELL,MAAAA,WAAW,EAAEQ;AAFR,KAAP;AAIH;;AACD,SAAOV,gBAAP;AACH,CAVD;;AAeA,MAAMa,YAAY,GAAIC,KAAD,IAAW;AAAA;;AAE5B,QAAM,CAACC,UAAD,EAAaC,kBAAb,IAAmCjB,UAAU,CAACI,WAAD,EAAcH,gBAAd,CAAnD;;AAEA,QAAMiB,cAAc,GAAIR,IAAD,IAAU;AAC7BO,IAAAA,kBAAkB,CAAC;AAACV,MAAAA,IAAI,EAAE,KAAP;AAAcG,MAAAA,IAAI,EAAEA;AAApB,KAAD,CAAlB;AACH,GAFD;;AAKA,QAAMS,iBAAiB,GAAIC,EAAD,IAAQ;AAC9BH,IAAAA,kBAAkB,CAAC;AAACV,MAAAA,IAAI,EAAE,QAAP;AAAiBa,MAAAA,EAAE,EAAEA;AAArB,KAAD,CAAlB;AACH,GAFD;;AAIA,QAAMC,WAAW,GAAG;AAChBnB,IAAAA,KAAK,EAAEc,UAAU,CAACd,KADF;AAEhBC,IAAAA,WAAW,EAAEa,UAAU,CAACb,WAFR;AAGhBmB,IAAAA,OAAO,EAAEJ,cAHO;AAIhBK,IAAAA,UAAU,EAAEJ;AAJI,GAApB;AAOA,sBACE,QAAC,WAAD,CAAa,QAAb;AAAsB,IAAA,KAAK,EAAEE,WAA7B;AAAA,cACGN,KAAK,CAACS;AADT;AAAA;AAAA;AAAA;AAAA,UADF;AAKH,CAzBD;;GAAMV,Y;;KAAAA,Y;AA2BN,eAAeA,YAAf","sourcesContent":["import CartContext from './cart-context';\nimport { useReducer } from 'react';\n\nconst defaultcartState = {\n    items: [],\n    totalAmount: 0,\n};\n\nconst cartReducer = (state, action) => {\n    if(action.type === 'ADD'){\n        const updatedItem = state.items.concat(action.item);\n        const updatedtotalAmount = state.totalAmount + action.item.price * action.item.amount;\n        return {\n          items: updatedItem,\n          totalAmount: updatedtotalAmount,\n        };\n    }\n    return defaultcartState;\n};\n\n\n\n\nconst CartProvider = (props) => {\n\n    const [cartSatate, dispatchCartAction] = useReducer(cartReducer, defaultcartState);\n\n    const addItemHandler = (item) => {\n        dispatchCartAction({type: 'ADD', item: item});\n    };\n\n\n    const removeItemHandler = (id) => {\n        dispatchCartAction({type: 'REMOVE', id: id});\n    };\n\n    const cartContext = {\n        items: cartSatate.items,\n        totalAmount: cartSatate.totalAmount,\n        addItem: addItemHandler,\n        removeItem: removeItemHandler,\n    };\n\n    return (\n      <CartContext.Provider value={cartContext}>\n        {props.children}\n      </CartContext.Provider>\n    );\n};\n\nexport default CartProvider;\n\n"]},"metadata":{},"sourceType":"module"}