{"ast":null,"code":"var _jsxFileName = \"/Users/dmehta2/Desktop/React/RouterProject/src/pages/NewQuote.js\",\n    _s = $RefreshSig$();\n\nimport React, { Fragment } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nFragment;\n\nconst NewQuote = () => {\n  _s();\n\n  const params = useParams();\n  return /*#__PURE__*/_jsxDEV(Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"New Quote Page\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 11,\n      columnNumber: 17\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: params.quoteId\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 12,\n      columnNumber: 17\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 10,\n    columnNumber: 13\n  }, this);\n};\n\n_s(NewQuote, \"+jVsTcECDRo3yq2d7EQxlN9Ixog=\", false, function () {\n  return [useParams];\n});\n\n_c = NewQuote;\nexport default NewQuote;\n\nvar _c;\n\n$RefreshReg$(_c, \"NewQuote\");","map":{"version":3,"sources":["/Users/dmehta2/Desktop/React/RouterProject/src/pages/NewQuote.js"],"names":["React","Fragment","useParams","NewQuote","params","quoteId"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,SAASC,SAAT,QAA0B,kBAA1B;;AACAD,QAAQ;;AAER,MAAME,QAAQ,GAAG,MAAM;AAAA;;AAEnB,QAAMC,MAAM,GAAGF,SAAS,EAAxB;AACA,sBAEQ,QAAC,QAAD;AAAA,4BACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ,eAEI;AAAA,gBAAIE,MAAM,CAACC;AAAX;AAAA;AAAA;AAAA;AAAA,YAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,UAFR;AAOH,CAVD;;GAAMF,Q;UAEaD,S;;;KAFbC,Q;AAYN,eAAeA,QAAf","sourcesContent":["import React, { Fragment } from 'react';\nimport { useParams } from 'react-router-dom';\nFragment\n\nconst NewQuote = () => {\n\n    const params = useParams();\n    return (\n        \n            <Fragment>\n                <h1>New Quote Page</h1>\n                <p>{params.quoteId}</p>\n            </Fragment>\n        );\n}\n\nexport default NewQuote;"]},"metadata":{},"sourceType":"module"}